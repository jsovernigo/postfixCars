*************************************************
Julian Sovernigo            0948924
gsoverni@mail.uoguelph.ca
CIS2520_F16                 A2: Cars and Postfix

10/17/2016
*************************************************

******************
Pledge of Honesty
******************
    By handing in this assignment with this README file, I
assert that I have sole access and control over my submission,
and that this submission contains entirely my own work. I
affirm that I have not colaborated in the creation of this code,
nor have I taken any segment of code that I do not have express
ownership or permission to use.

************
Compilation
************

1- cd to the root folder of the program
2- type 'make' in the root folder.
	a- this will make two executables, q1 and q2
3- to remove resources generated by compilation, please type 'make clean'

********************
Running the program
********************

1- cd to the root folder of the program
2- execute either q1 or q2
3- the output will be:
	a- either a command-loop menu in q1 which will allow for the addition, modification
	   and storage of "car" structs in three seperate lists, or;
		i- this invokation does not require any command line arguments.
	b- in the case of q2, the output will be the solution of the provided post fix equation
		i- in this case, a command line argument of the single-string postfix equation.

********
Testing
********

Car Inventory:

	Test:	program was given several cars to store
	Result:	cars added to list successfully

	Test:	program was asked to print lists
	Result:	cars were printed successfully

	Test:	attempted to add invalid license plate
	Result:	program prompted for correct value

	Test:	attempted to rent non-existant car
	Result:	program responed with no-cars-available-to-rent

	Test:	attempted to provide invalid license plate for return
	Result:	license plate was rejected and reprompted

	Test:	returned car 100miles later.
	Result:	price was set at 40.00

	Test:	returned car 101miles later
	Result:	price was set at 40.15

Postfix Solver:

	Test:	program was tested with the input 24+
	Result:	result was expected 6

	Test:	program was tested with the input 65-
	Result:	result was expeced 1

	Test:	program was tested with the input 56-
	Result:	result was expected -1

	Test:	program was tested with the input 28+6-5^6*
	Result:	result was expected 6144

************
Limitations
************

Because of the nature of single digit, non-space-delimited input for the post fix solving
engine, decimal input was not acceptable.  This is unfortunate, but unfortunately is not
possible to impliment without disregarding the assignment specification.

Due to the nature of file io, any damage to the file containing the car records can result
in the loading of invalid or incorrect cars.  Since this is not directly monitored by the
program, there is no way of preventing users from damaging the file and therefore preventing
the creation of invalid cars.   Also please note that since records cannot be verified for
correctness outside of the defined restrictions, cars which contain license plates that do
not conform to a country's laws or regulations may be generated and saved, despite their 
lack of validity in the context in which they are used externally.  License plates, for the
sake of the program's error checking, may only be checked for their length exceeding 
zero-length.

